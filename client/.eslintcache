[{"/home/don/foss/tnp2/client/src/index.js":"1","/home/don/foss/tnp2/client/src/App.js":"2","/home/don/foss/tnp2/client/src/Posts.js":"3","/home/don/foss/tnp2/client/src/config.js":"4","/home/don/foss/tnp2/client/src/PostForm.js":"5","/home/don/foss/tnp2/client/src/Navbar.js":"6"},{"size":263,"mtime":1607362230620,"results":"7","hashOfConfig":"8"},{"size":448,"mtime":1607361748685,"results":"9","hashOfConfig":"8"},{"size":3334,"mtime":1607367291564,"results":"10","hashOfConfig":"8"},{"size":57,"mtime":1606830748844,"results":"11","hashOfConfig":"8"},{"size":3413,"mtime":1607361911960,"results":"12","hashOfConfig":"8"},{"size":869,"mtime":1607360539222,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qnpa1z",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},"/home/don/foss/tnp2/client/src/index.js",[],"/home/don/foss/tnp2/client/src/App.js",[],["28","29"],"/home/don/foss/tnp2/client/src/Posts.js",["30"],"/home/don/foss/tnp2/client/src/config.js",[],"/home/don/foss/tnp2/client/src/PostForm.js",[],"/home/don/foss/tnp2/client/src/Navbar.js",["31","32","33"],"import React, { Component } from 'react'\nimport { Input, Menu, Segment } from 'semantic-ui-react'\nimport { NavLink, withRouter } from 'react-router-dom'\nexport default class Navbar extends Component {\n  \n  state = { activeItem: 'posts' }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <div>\n        <Menu \n        color=\"teal\"\n        pointing>\n          <Menu.Item\n            as={NavLink}\n            to='/'\n            name='posts'\n            active={activeItem === 'posts'}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            as={NavLink}\n            to=\"/add\"\n            name='add post'\n            active={activeItem === 'add'}\n            onClick={this.handleItemClick}\n          />\n        </Menu>\n      </div>\n    )\n  }\n}\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":76,"column":48,"nodeType":"40","endLine":76,"endColumn":81},{"ruleId":"41","severity":1,"message":"42","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":15},{"ruleId":"41","severity":1,"message":"45","line":2,"column":23,"nodeType":"43","messageId":"44","endLine":2,"endColumn":30},{"ruleId":"41","severity":1,"message":"46","line":3,"column":19,"nodeType":"43","messageId":"44","endLine":3,"endColumn":29},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Segment' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]